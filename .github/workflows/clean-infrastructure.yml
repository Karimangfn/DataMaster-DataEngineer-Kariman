run-name: Clean Cloud Infrastructure
name: Clean Cloud Infrastructure

permissions: write-all

on:
  workflow_dispatch:

jobs:
  terraform-destroy:
    name: 🗑️ Deleting Cloud Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS || github.event.inputs.azure_credentials }}

      - name: Read run ID
        id: get-run-id
        run: |
          RUN_ID_PATH="../assets/terraform_state/run_id.txt"
          if [ ! -f "$RUN_ID_PATH" ]; then
            echo "❌ run_id.txt file not found at $RUN_ID_PATH!"
            echo "⚠️ Infrastructure was not created for deletion."
            echo "🛑 Stopping the workflow."
            exit 1
          fi

          if [ ! -s "$RUN_ID_PATH" ]; then
            echo "❌ run_id.txt file is empty at $RUN_ID_PATH!"
            echo "⚠️ Infrastructure was not created for deletion."
            echo "🛑 Stopping the workflow."
            exit 1
          fi

          echo "RUN_ID=$(cat $RUN_ID_PATH)" >> "$GITHUB_ENV"

      - name: Download Terraform state from previous run
        uses: actions/download-artifact@v4
        with:
          name: terraform-state
          path: ./infrastructure
          run-id: ${{ env.RUN_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - run: terraform init
      - run: terraform validate

      - name: Terraform destroy plan (save output)
        id: tf_plan
        run: |
          terraform plan -destroy -no-color -var="subscription_id=$(az account show --query id -o tsv)" > plan.txt || true

      - run: terraform destroy -auto-approve -var="subscription_id=$(az account show --query id -o tsv)"

      - name: Generate summary of resources to be destroyed
        if: always()
        run: |
          echo "## 🧹 Terraform Resources to be Destroyed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
      
          if grep -q '^\s*# .*will be destroyed' plan.txt; then
            echo "| Resource Type | Resource Name | Delete Status |" >> $GITHUB_STEP_SUMMARY
            echo "|---------------|---------------|-------------------|" >> $GITHUB_STEP_SUMMARY
      
            grep '^\s*# .*will be destroyed' plan.txt | while read -r line; do
              resource=$(echo "$line" | sed -E 's/^\s*# ([^ ]+)\.([^ ]+) will be destroyed/\1 \2/')
      
              full_type=$(echo "$resource" | awk '{print $1}')
              id=$(echo "$resource" | awk '{print $2}')
              type=${full_type#azurerm_}
      
              echo "| $type | $id | ✅ |" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "_No resources to destroy._" >> $GITHUB_STEP_SUMMARY
          fi
