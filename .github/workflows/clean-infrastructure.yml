name: Clean Cloud Infrastructure

on:
  workflow_dispatch:
    inputs:
      azure_credentials:
        description: 'Optional Azure credentials (JSON format). Will be used if AZURE_CREDENTIALS secret is not set.'
        required: false
        type: string

jobs:
  get-subscription:
    name: Fetching Subscription
    runs-on: ubuntu-latest
    outputs:
      subscription_id: ${{ steps.get-subscription-id.outputs.subscription_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS || github.event.inputs.azure_credentials }}

      - name: Debug Subscription ID
        run: echo "SUBSCRIPTION_ID = ${{ needs.get-subscription.outputs.subscription_id }}"

      - name: Get Subscription ID
        id: get-subscription-id
        run: |
          SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          echo "::add-mask::$SUBSCRIPTION_ID"
          echo "subscription_id=$SUBSCRIPTION_ID" >> $GITHUB_OUTPUT
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS || github.event.inputs.azure_credentials }}

      - name: Debug Subscription ID
        run: echo "SUBSCRIPTION_ID = ${{ needs.get-subscription.outputs.subscription_id }}"

  terraform-destroy:
    name: Deleting Cloud Infrastructure
    runs-on: ubuntu-latest
    needs: get-subscription
    defaults:
      run:
        working-directory: ./infrastructure
    env:
        ARM_SUBSCRIPTION_ID: ${{ needs.get-subscription.outputs.subscription_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS || github.event.inputs.azure_credentials }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - run: terraform init
      - run: terraform validate
      - run: terraform plan -var="subscription_id=${{ needs.get-subscription.outputs.subscription_id }}"
      - run: terraform destroy -auto-approve -var="subscription_id=${{ needs.get-subscription.outputs.subscription_id }}"
