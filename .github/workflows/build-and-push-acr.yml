name: Build and Push to ACR

on:
  push:
    branches:
      - develop
    paths:
      - '**/VERSION'
  pull_request:
    branches:
      - develop
    paths:
      - '**/VERSION'
  workflow_dispatch:
    inputs:
      azure_credentials:
        description: 'Azure Credentials JSON'
        required: false
        type: string
      acr_name:
        description: 'Azure Container Registry Name'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Detect service path from changed VERSION file
        id: detect_path
        run: |
          path=$(git diff --name-only ${{ github.event.before || github.sha }} | grep 'VERSION' | head -n1 | xargs dirname)
          echo "service_path=$path" >> $GITHUB_OUTPUT

      - name: Read service name and version
        id: read_info
        run: |
          path=${{ steps.detect_path.outputs.service_path }}
          version=$(cat "$path/VERSION")
          service=$(basename "$path")
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "service=$service" >> $GITHUB_OUTPUT

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ github.event.inputs.azure_credentials || secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          az acr login --name ${{ github.event.inputs.acr_name || secrets.ACR_NAME }}

      - name: Check if tag already exists in ACR
        id: tag_check
        continue-on-error: true
        run: |
          set -e
          exists=$(az acr repository show-tags \
            --name ${{ github.event.inputs.acr_name || secrets.ACR_NAME }} \
            --repository ${{ steps.read_info.outputs.service }} \
            --query "contains(@, '${{ steps.read_info.outputs.version }}')" \
            --output tsv 2>/dev/null || echo false)

          echo "Tag exists? $exists"
          echo "tag_exists=$exists" >> $GITHUB_OUTPUT

      - name: Build Docker image
        if: steps.tag_check.outputs.tag_exists != 'true'
        run: |
          docker build -t ${{ github.event.inputs.acr_name || secrets.ACR_NAME }}.azurecr.io/${{ steps.read_info.outputs.service }}:${{ steps.read_info.outputs.version }} ${{ steps.detect_path.outputs.service_path }}

      - name: Push Docker image
        if: steps.tag_check.outputs.tag_exists != 'true'
        run: |
          docker push ${{ github.event.inputs.acr_name || secrets.ACR_NAME }}.azurecr.io/${{ steps.read_info.outputs.service }}:${{ steps.read_info.outputs.version }}
