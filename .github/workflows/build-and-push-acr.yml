name: Build and Push to ACR

on:
  push:
    branches:
      - develop
    paths:
      - '**/VERSION'
  pull_request:
    branches:
      - develop
    paths:
      - '**/VERSION'
  workflow_dispatch:
    inputs:
      azure_credentials:
        description: 'Azure Credentials JSON'
        required: false
        type: string
      acr_name:
        description: 'Azure Container Registry Name'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          service_path=$(git ls-tree -r HEAD --name-only | grep 'VERSION' | head -n 1 | xargs dirname)
          echo "service_path=$service_path"
          if [ -f "$service_path/setup.py" ]; then
            cd $service_path
            python -m pip install --upgrade pip
            pip install .
          else
            echo "setup.py not found in $service_path. Skipping dependency installation."
          fi

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ github.event.inputs.azure_credentials || secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          acr_name="${{ github.event.inputs.acr_name || secrets.ACR_NAME }}"
          az acr login --name $acr_name

      - name: Read version from VERSION file
        id: read_version
        run: |
          service_path=$(git ls-tree -r HEAD --name-only | grep 'VERSION' | head -n 1 | xargs dirname)
          echo "service_path=$service_path"
          VERSION=$(cat $service_path/VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Check if image with version exists in ACR
        id: check_acr_tag
        run: |
          acr_name="${{ github.event.inputs.acr_name || secrets.ACR_NAME }}"
          IMAGE="${acr_name}.azurecr.io/ingest-api:$VERSION"
          if az acr repository show-tags --name $acr_name --repository ingest-api --query "[?contains(@, '$VERSION')]" | grep -q "$VERSION"; then
            echo "Tag $VERSION already exists. Skipping build and push."
            echo "skip_build=true" >> $GITHUB_ENV
          else
            echo "Tag $VERSION does not exist. Proceeding with build and push."
            echo "skip_build=false" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        if: env.skip_build == 'false'
        run: |
          acr_name="${{ github.event.inputs.acr_name || secrets.ACR_NAME }}"
          service_path=$(git ls-tree -r HEAD --name-only | grep 'VERSION' | head -n 1 | xargs dirname)
          echo "service_path=$service_path"
          if [ -f "$service_path/Dockerfile" ]; then
            docker buildx build -t $acr_name.azurecr.io/ingest-api:$VERSION -f $service_path/Dockerfile $service_path/
          else
            echo "Dockerfile not found in $service_path. Skipping build."
          fi

      - name: Push Docker image to ACR
        if: env.skip_build == 'false'
        run: |
          acr_name="${{ github.event.inputs.acr_name || secrets.ACR_NAME }}"
          docker push ${acr_name}.azurecr.io/ingest-api:${{ env.VERSION }}
